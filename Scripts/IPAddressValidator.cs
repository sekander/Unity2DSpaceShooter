using UnityEngine;
using UnityEngine.UI;
using System.Text.RegularExpressions;
using TMPro;

public class IPAddressValidator : MonoBehaviour
{
    // public InputField ipAddressInput;
    public TMP_InputField ipAddressInput;
    public Toggle player_host_toggle;
    //private string validationText;


    public void ValidateIPAddress()
    {
        string ipAddress = ipAddressInput.text;
        
        if (IsValidIPAddress(ipAddress))
        {
            
            //validationText.text = "Valid IP Address";
            GameManger.instance.SetServerIP(ipAddress);
            GameManger.instance.SetPlayerHost(player_host_toggle);
        }
        else
        {
            //validationText.text = "Invalid IP Address";
        }
    }

    private bool IsValidIPAddress(string ipAddress)
    {
        // Regular expression patterns for IPv4 and IPv6
        string ipv4Pattern = 
            @"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$";
        //string ipv6Pattern = 
        //    @"^((?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|(?:(?:[0-9a-fA-F]{1,4}:){1,6}):(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|(?:[0-9a-fA-F]{1,4}:){1,7}:|:(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|::(?:[0-9a-fA-F]{1,4}:){1,6}|(?:(?:[0-9a-fA-F]{1,4}:){1,5}):(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|::(?:[0-9a-fA-F]{1,4}:){1,5}(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|(?:[0-9a-fA-F]{1,4}:){1,4}(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|::(?:[0-9a-fA-F]{1,4}:){1,4}(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|(?:[0-9a-fA-F]{1,4}:){1,3}(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|::(?:[0-9a-fA-F]{1,4}:){1,3}(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|(?:[0-9a-fA-F]{1,4}:){1,2}(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|::(?:[0-9a-fA-F]{1,4}:){1,2}(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|(?:[0-9a-fA-F]{1,4}:)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|::(?:[0-9a-fA-F]{1,4}:)(?:(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])|[0-9a-fA-F]{1,4}::(?:[0-9a-fA-F]{1,4}:){0,6}[0-9a-fA-F]{0,4}|::(?:[0-9a-fA-F]{1,4}:){0,7}[0-9a-fA-F]{0,4}|(?:[0-9a-fA-F]{1,4}:){1,4}:|(?:[0-9a-fA-F]{1,4}:){1,5}:|:(?:[0-9a-fA-F]{1,4}:){1,6}|(?:(?:[0-9a-fA-F]{1,4}:){1,2}:|(?:[0-9a-fA-F]{1,4}:){1,2})(?:[0-9a-fA-F]{1,4}:){1,4}|(?:(?:[0-9a-fA-F]{1,4}:){1,3}:|(?:[0-9a-fA-F]{1,4}:){1,3})(?:[0-9a-fA-F]{1,4}:){1,3}|(?:(?:[0-9a-fA-F]{1,4}:){1,4}:|(?:[0-9a-fA-F]{1,4}:){1,4})(?:[0-9a-fA-F]{1,4}:){1,2}|(?:(?:[0-9a-fA-F]{1,4}:){1,5}:|(?:[0-9a-fA-F]{1,4}:){1,5})(?:[0-9a-fA-F]{1,4}:)|(?:(?:[0-9a-fA-F]{1,4}:){1,6}:|(?:[0-9a-fA-F]{1,4}:){1,6})[0-9a-fA-F]{1,4}|(?:(?:[0-9a-fA-F]{1,4}:){1,7}|(?:[0-9a-fA-F]{1,4}:){1,7})(?:[0-9a-fA-F]{1,4})|(?:(?:[0-9a-fA-F]{1,4}:){1,8}|(?:[0-9a-fA-F]{1,4}:){1,8})$";

        Regex ipv4Regex = new Regex(ipv4Pattern);
        //Regex ipv6Regex = new Regex(ipv6Pattern);

        // return ipv4Regex.IsMatch(ipAddress) || ipv6Regex.IsMatch(ipAddress);
        return ipv4Regex.IsMatch(ipAddress) ;
    }
}
